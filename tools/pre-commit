#!/usr/bin/env bash
# Add this file to .git/hooks/ and change mode to execute with the following
#
#   cp tools/pre-commit .git/hooks/
#   chmod +x .git/hooks/pre-commit

if git rev-parse --verify HEAD >/dev/null 2>&1
then
        against=HEAD
else
        # Initial commit: diff against an empty tree object
        against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi

# If you want to allow non-ASCII filenames set this variable to true.
allownonascii=$(git config --bool hooks.allownonascii)

# Redirect output to stderr.
exec 1>&2

# Cross platform projects tend to avoid non-ASCII filenames; prevent
# them from being added to the repository. We exploit the fact that the
# printable range starts at the space character and ends with tilde.
if [ "$allownonascii" != "true" ] &&
        # Note that the use of brackets around a tr range is ok here, (it's
        # even required, for portability to Solaris 10's /usr/bin/tr), since
        # the square bracket bytes happen to fall in the designated range.
        test $(git diff --cached --name-only --diff-filter=A -z $against |
          LC_ALL=C tr -d '[ -~]\0' | wc -c) != 0
then
        cat <<\EOF
Error: Attempt to add a non-ASCII file name.

This can cause problems if you want to work with people on other platforms.

To be portable it is advisable to rename the file.

If you know what you are doing you can disable this check using:

  git config hooks.allownonascii true
EOF
        exit 1
fi

# For each changed python file run Isort Black 
for FILE in $(git status --short | cut -d 'M' -f 2)
do
  if [[ $FILE == *.py ]]; then
    if [[ $FILE == "__init__.py" ]]; then
      continue
    fi
    echo " Formating $FILE"
    echo "   Black"
    pipenv run black -l 120 -t py37 $FILE &> /dev/null
    echo "   Isort"
    pipenv run isort -y $FILE &> /dev/null
  fi
done

# If any changes from Black or Isort add to commit.
echo " Add all"
git add *

# For each changed python file run Pylint
for FILE in $(git status --short | cut -d 'M' -f 2)
do
  if [[ $FILE =~ \.py$ ]]; then
    echo "ﴫ Pylint: $FILE"
    pipenv run pylint $FILE
  fi
done
exit 0